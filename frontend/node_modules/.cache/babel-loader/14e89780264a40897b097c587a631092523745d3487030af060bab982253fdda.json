{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full-Stack-Test\\\\frontend\\\\src\\\\components\\\\QuizForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ResultDisplay from \"./ResultDisplay\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst questions = [\"What's your current fitness level?\", \"What is your main health goal?\", \"How many days a week can you exercise?\"];\nconst QuizForm = () => {\n  _s();\n  const [answers, setAnswers] = useState([\"\", \"\", \"\"]);\n  const [step, setStep] = useState(0);\n  const [result, setResult] = useState(null);\n  const [showBanner, setShowBanner] = useState(false);\n  const handleAnswer = e => {\n    const updated = [...answers];\n    updated[step] = e.target.value;\n    setAnswers(updated);\n  };\n  const next = async () => {\n    if (step < 2) {\n      setStep(step + 1);\n    } else {\n      const res = await fetch(\"http://localhost:8000/api/health-plan\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          q1: answers[0],\n          q2: answers[1],\n          q3: answers[2]\n        })\n      });\n      const data = await res.json();\n      setResult(data);\n      setShowBanner(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [result ? /*#__PURE__*/_jsxDEV(ResultDisplay, {\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: questions[step]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: answers[step],\n        onChange: handleAnswer,\n        placeholder: \"Type your answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: next,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showBanner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      children: \"\\uD83C\\uDF89 You have earned a free 7-day health challenge!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizForm, \"AmD4rCrX0hQ4vbNL5NePguGa+Pg=\");\n_c = QuizForm;\nexport default QuizForm;\nvar _c;\n$RefreshReg$(_c, \"QuizForm\");","map":{"version":3,"names":["React","useState","ResultDisplay","jsxDEV","_jsxDEV","Fragment","_Fragment","questions","QuizForm","_s","answers","setAnswers","step","setStep","result","setResult","showBanner","setShowBanner","handleAnswer","e","updated","target","value","next","res","fetch","method","headers","body","JSON","stringify","q1","q2","q3","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","className","_c","$RefreshReg$"],"sources":["D:/Full-Stack-Test/frontend/src/components/QuizForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ResultDisplay from \"./ResultDisplay\";\r\n\r\nconst questions = [\r\n  \"What's your current fitness level?\",\r\n  \"What is your main health goal?\",\r\n  \"How many days a week can you exercise?\"\r\n];\r\n\r\nconst QuizForm = () => {\r\n  const [answers, setAnswers] = useState([\"\", \"\", \"\"]);\r\n  const [step, setStep] = useState(0);\r\n  const [result, setResult] = useState(null);\r\n  const [showBanner, setShowBanner] = useState(false);\r\n\r\n  const handleAnswer = (e) => {\r\n    const updated = [...answers];\r\n    updated[step] = e.target.value;\r\n    setAnswers(updated);\r\n  };\r\n\r\n  const next = async () => {\r\n    if (step < 2) {\r\n      setStep(step + 1);\r\n    } else {\r\n      const res = await fetch(\"http://localhost:8000/api/health-plan\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          q1: answers[0],\r\n          q2: answers[1],\r\n          q3: answers[2]\r\n        })\r\n      });\r\n      const data = await res.json();\r\n      setResult(data);\r\n      setShowBanner(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {result ? (\r\n        <ResultDisplay result={result} />\r\n      ) : (\r\n        <>\r\n          <h3>{questions[step]}</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={answers[step]}\r\n            onChange={handleAnswer}\r\n            placeholder=\"Type your answer\"\r\n          />\r\n          <button onClick={next}>Next</button>\r\n        </>\r\n      )}\r\n      {showBanner && <div className=\"banner\">ðŸŽ‰ You have earned a free 7-day health challenge!</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}